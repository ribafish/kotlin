@R|foo/Anno|(<strcat>(String(return type: ), constant#))  kotlin/collections/List<@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>>
  context -> FirPropertySymbol <local>/localProperty
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>
  context -> FirPropertySymbol <local>/localProperty
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String
  context -> FirPropertySymbol <local>/localProperty
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(return type: ), constant#))  kotlin/collections/List<@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>>
  context -> FirPropertySymbol <local>/localProperty
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>
  context -> FirPropertySymbol <local>/localProperty
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String
  context -> FirPropertySymbol <local>/localProperty
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(return type: ), constant#))  kotlin/collections/List<@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>>
  context -> FirAnonymousFunctionSymbol special/anonymous
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>
  context -> FirAnonymousFunctionSymbol special/anonymous
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String
  context -> FirAnonymousFunctionSymbol special/anonymous
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(return type: ), constant#))  kotlin/collections/List<@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>>
  context -> FirAnonymousFunctionSymbol special/anonymous
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>
  context -> FirAnonymousFunctionSymbol special/anonymous
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String
  context -> FirAnonymousFunctionSymbol special/anonymous
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(return type: ), constant#))  kotlin/collections/List<@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>>
  context -> FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/localProperty
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>
  context -> FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/localProperty
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String
  context -> FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/localProperty
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(return type: ), constant#))  kotlin/collections/List<@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>>
  context -> FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/localProperty
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>
  context -> FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/localProperty
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String
  context -> FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/localProperty
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(return type: ), constant#))  kotlin/collections/List<@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>>
  context -> FirBackingFieldSymbol <local>/field from FirPropertySymbol <local>/localProperty
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>
  context -> FirBackingFieldSymbol <local>/field from FirPropertySymbol <local>/localProperty
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String
  context -> FirBackingFieldSymbol <local>/field from FirPropertySymbol <local>/localProperty
  anchor -> [FirNamedFunctionSymbol foo/explicitType]

FILE: [ResolvedTo(IMPORTS)] localDelegatedPropertyWithPropagatedType.kt
    @R|kotlin/annotation/Target|[CompilerRequiredAnnotations](Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.TYPE|) public? final? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] annotation class Anno : R|kotlin/Annotation| {
        public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=foo/Anno.position] position: String): R|foo/Anno| {
            LAZY_super<R|kotlin/Any|>
        }

        public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val position: String = R|<local>/position|
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

    }
    public? final? const [ResolvedTo(RAW_FIR)] val constant: <implicit> = LAZY_EXPRESSION
        public? [ResolvedTo(RAW_FIR)] get(): <implicit>
    public final [ResolvedTo(CONTRACTS)] fun explicitType(): R|@R|foo/Anno|(<strcat>(String(return type: ), constant#))  kotlin/collections/List<@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>>| {
        ^explicitType IntegerLiteral(0)
    }
    public final [ResolvedTo(BODY_RESOLVE)] fun resolveMe(): R|kotlin/Unit| {
        [ResolvedTo(BODY_RESOLVE)] lval localProperty: R|@R|foo/Anno|(<strcat>(String(return type: ), constant#))  kotlin/collections/List<@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>>|by R|kotlin/lazy|<R|@R|foo/Anno|(<strcat>(String(return type: ), constant#))  kotlin/collections/List<@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>>|>(<L> = [ResolvedTo(BODY_RESOLVE)] [MatchingParameterFunctionTypeKey=kotlin/Function0<T>] lazy@fun <anonymous>(): R|@R|foo/Anno|(<strcat>(String(return type: ), constant#))  kotlin/collections/List<@R|foo/Anno|(<strcat>(String(nested return type: ), constant#))  kotlin/collections/Collection<@R|foo/Anno|(<strcat>(String(nested nested return type: ), constant#))  kotlin/String>>| <inline=NoInline>  {
            ^ R|foo/explicitType|()
        }
        )
    }
