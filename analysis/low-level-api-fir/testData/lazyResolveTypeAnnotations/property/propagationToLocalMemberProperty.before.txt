@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?
  context -> FirPropertySymbol <local>/doo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>
  context -> FirPropertySymbol <local>/doo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int
  context -> FirPropertySymbol <local>/doo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?
  context -> FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/doo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>
  context -> FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/doo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int
  context -> FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/doo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?
  context -> FirBackingFieldSymbol <local>/field from FirPropertySymbol <local>/doo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>
  context -> FirBackingFieldSymbol <local>/field from FirPropertySymbol <local>/doo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int
  context -> FirBackingFieldSymbol <local>/field from FirPropertySymbol <local>/doo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?
  context -> FirPropertySymbol <local>/foo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>
  context -> FirPropertySymbol <local>/foo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int
  context -> FirPropertySymbol <local>/foo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?
  context -> FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/foo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>
  context -> FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/foo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int
  context -> FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/foo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?
  context -> FirValueParameterSymbol <local>/value from FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/foo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>
  context -> FirValueParameterSymbol <local>/value from FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/foo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int
  context -> FirValueParameterSymbol <local>/value from FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/foo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?
  context -> FirBackingFieldSymbol <local>/field from FirPropertySymbol <local>/foo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>
  context -> FirBackingFieldSymbol <local>/field from FirPropertySymbol <local>/foo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int
  context -> FirBackingFieldSymbol <local>/field from FirPropertySymbol <local>/foo
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?
  context -> FirPropertySymbol <local>/baz
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>
  context -> FirPropertySymbol <local>/baz
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int
  context -> FirPropertySymbol <local>/baz
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?
  context -> FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/baz
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>
  context -> FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/baz
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int
  context -> FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/baz
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?
  context -> FirValueParameterSymbol <local>/value from FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/baz
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>
  context -> FirValueParameterSymbol <local>/value from FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/baz
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int
  context -> FirValueParameterSymbol <local>/value from FirPropertyAccessorSymbol special/accessor from FirPropertySymbol <local>/baz
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?
  context -> FirBackingFieldSymbol <local>/field from FirPropertySymbol <local>/baz
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>
  context -> FirBackingFieldSymbol <local>/field from FirPropertySymbol <local>/baz
  anchor -> [FirPropertySymbol util/bar]

@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int
  context -> FirBackingFieldSymbol <local>/field from FirPropertySymbol <local>/baz
  anchor -> [FirPropertySymbol util/bar]

FILE: [ResolvedTo(IMPORTS)] propagationToLocalMemberProperty.kt
    @R|kotlin/annotation/Target|[CompilerRequiredAnnotations](Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.TYPE|) public? final? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] annotation class Anno : R|kotlin/Annotation| {
        public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=util/Anno.str] str: String): R|util/Anno| {
            LAZY_super<R|kotlin/Any|>
        }

        public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val str: String = R|<local>/str|
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

    }
    public? final? const [ResolvedTo(RAW_FIR)] val prop: <implicit> = LAZY_EXPRESSION
        public? [ResolvedTo(RAW_FIR)] get(): <implicit>
    public final [ResolvedTo(CONTRACTS)] var bar: R|@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?| = Null(null)
        public [ResolvedTo(CONTRACTS)] get(): R|@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?|
        public [ResolvedTo(CONTRACTS)] set([ResolvedTo(CONTRACTS)] value: R|@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?|): R|kotlin/Unit|
    public final [ResolvedTo(BODY_RESOLVE)] fun foo(): R|kotlin/Unit| {
        local final [ResolvedTo(BODY_RESOLVE)] class Local : R|kotlin/Any| {
            public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Local] constructor(): R|<local>/Local| {
                super<R|kotlin/Any|>()
            }

            public final [ResolvedTo(BODY_RESOLVE)] val doo: R|@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?|
                public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Local] get(): R|@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?| {
                    ^ this@R|<local>/Local|.R|<local>/foo|
                }

            public final [ResolvedTo(BODY_RESOLVE)] var foo: R|@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?| = R|util/bar|
                public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Local] get(): R|@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?|
                public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Local] set([ResolvedTo(BODY_RESOLVE)] value: R|@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?|): R|kotlin/Unit|

            public final [ResolvedTo(BODY_RESOLVE)] var baz: R|@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?| = this@R|<local>/Local|.R|<local>/foo|
                public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Local] get(): R|@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?|
                public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Local] set([ResolvedTo(BODY_RESOLVE)] value: R|@R|util/Anno|(<strcat>(String(bar ), prop#))  kotlin/collections/List<@R|util/Anno|(<strcat>(String(nested bar ), prop#))  kotlin/collections/Collection<@R|util/Anno|(<strcat>(String(nested nested bar ), prop#))  kotlin/Int>>?|): R|kotlin/Unit|

        }

    }
